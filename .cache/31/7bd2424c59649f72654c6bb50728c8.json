{"id":"node_modules/cards/src/decks/standard.js","dependencies":[{"name":"/Users/LenSerrano/Desktop/BabyShare/package.json","includedInParent":true,"mtime":1571508784082},{"name":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/package.json","includedInParent":true,"mtime":1571508784064},{"name":"../deck","loc":{"line":2,"column":25},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/decks/standard.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/deck.js"},{"name":"../card","loc":{"line":3,"column":36},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/decks/standard.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/index.js"},{"name":"../suits","loc":{"line":4,"column":53},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/decks/standard.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/suits.js"},{"name":"../ranks","loc":{"line":5,"column":97},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/decks/standard.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/ranks/index.js"}],"generated":{"js":"\r\nconst { Deck } = require('../deck');\r\nconst { Card, JokerCard } = require('../card');\r\nconst { spades, hearts, diamonds, clubs } = require ('../suits');\r\nconst { ace, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king } = require('../ranks');\r\n\r\n/**\r\n * @class StandardDeck\r\n * @extends Deck\r\n * @param options {Object?}\r\n * @param [options.jokers=0] {number|JokerCard[]} - Either a number of jokers to generate, or an array of jokers to add to the deck\r\n */\r\nclass StandardDeck extends Deck {\r\n\tconstructor({ jokers = 0 } = { }) {\r\n\t\tsuper(generateDeck(jokers));\r\n\t}\r\n}\r\n\r\nexports.StandardDeck = StandardDeck;\r\n\r\nconst suits = [ spades, hearts, diamonds, clubs ];\r\nconst ranks = [ ace, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king ];\r\n\r\nconst generateDeck = (jokers) => {\r\n\tconst cards = [ ];\r\n\r\n\tsuits.forEach((suit) => {\r\n\t\tranks.forEach((rank) => {\r\n\t\t\tcards.push(new Card(suit, rank));\r\n\t\t});\r\n\t});\r\n\r\n\tif (Array.isArray(jokers)) {\r\n\t\tif (! jokers.every((card) => card instanceof JokerCard)) {\r\n\t\t\tthrow new Error('StandardDeck: Only joker cards may be provided in the jokers parameter');\r\n\t\t}\r\n\r\n\t\tcards.push(...jokers);\r\n\t}\r\n\r\n\telse {\r\n\t\tfor (let i = 0; i < jokers; i++) {\r\n\t\t\tcards.push(new JokerCard());\r\n\t\t}\r\n\t}\r\n\r\n\treturn cards;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cards/src/decks/standard.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cards/src/decks/standard.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"node_modules/cards/src/decks/standard.js":"\r\nconst { Deck } = require('../deck');\r\nconst { Card, JokerCard } = require('../card');\r\nconst { spades, hearts, diamonds, clubs } = require ('../suits');\r\nconst { ace, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king } = require('../ranks');\r\n\r\n/**\r\n * @class StandardDeck\r\n * @extends Deck\r\n * @param options {Object?}\r\n * @param [options.jokers=0] {number|JokerCard[]} - Either a number of jokers to generate, or an array of jokers to add to the deck\r\n */\r\nclass StandardDeck extends Deck {\r\n\tconstructor({ jokers = 0 } = { }) {\r\n\t\tsuper(generateDeck(jokers));\r\n\t}\r\n}\r\n\r\nexports.StandardDeck = StandardDeck;\r\n\r\nconst suits = [ spades, hearts, diamonds, clubs ];\r\nconst ranks = [ ace, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king ];\r\n\r\nconst generateDeck = (jokers) => {\r\n\tconst cards = [ ];\r\n\r\n\tsuits.forEach((suit) => {\r\n\t\tranks.forEach((rank) => {\r\n\t\t\tcards.push(new Card(suit, rank));\r\n\t\t});\r\n\t});\r\n\r\n\tif (Array.isArray(jokers)) {\r\n\t\tif (! jokers.every((card) => card instanceof JokerCard)) {\r\n\t\t\tthrow new Error('StandardDeck: Only joker cards may be provided in the jokers parameter');\r\n\t\t}\r\n\r\n\t\tcards.push(...jokers);\r\n\t}\r\n\r\n\telse {\r\n\t\tfor (let i = 0; i < jokers; i++) {\r\n\t\t\tcards.push(new JokerCard());\r\n\t\t}\r\n\t}\r\n\r\n\treturn cards;\r\n};\r\n"},"lineCount":49}},"error":null,"hash":"ab87bce5d6ea8adf65de7ca8da93cadf","cacheData":{"env":{}}}