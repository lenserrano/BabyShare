{"id":"node_modules/cards/src/card/joker.js","dependencies":[{"name":"/Users/LenSerrano/Desktop/BabyShare/package.json","includedInParent":true,"mtime":1571508784082},{"name":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/package.json","includedInParent":true,"mtime":1571508784064},{"name":"./card","loc":{"line":2,"column":25},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/joker.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/card.js"},{"name":"../suits","loc":{"line":3,"column":26},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/joker.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/suits.js"},{"name":"../rank","loc":{"line":4,"column":25},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/joker.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/rank.js"},{"name":"../ranks","loc":{"line":5,"column":26},"parent":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/card/joker.js","resolved":"/Users/LenSerrano/Desktop/BabyShare/node_modules/cards/src/ranks/index.js"}],"generated":{"js":"\r\nconst { Card } = require('./card');\r\nconst { none } = require ('../suits');\r\nconst { Rank } = require('../rank');\r\nconst { joker } = require('../ranks');\r\n\r\nconst props = new WeakMap();\r\n\r\nlet preferedColor = 'black';\r\n\r\nconst colors = new Set([ 'black', 'white', 'red' ]);\r\n\r\n/**\r\n * Sets the prefered joker color to use when creating joker cards. Effects the unicode character\r\n * for the card.\r\n *\r\n * @param color {'red'|'black'|'white'}\r\n * @return void\r\n */\r\nexports.preferedJokerColor = (color) => {\r\n\tif (! colors.has(color)) {\r\n\t\tthrow new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\r\n\t}\r\n\t\r\n\tpreferedColor = color;\r\n};\r\n\r\n/**\r\n * @class JokerCard\r\n * @extends Card\r\n * @param color {('red'|'black'|'white')?} - Defaults to whatever is set as the prefered color\r\n * @see preferedJokerColor\r\n * @description Special sub-class for representing Joker cards\r\n */\r\nclass JokerCard extends Card {\r\n\tconstructor(color = preferedColor) {\r\n\t\tif (! colors.has(color)) {\r\n\t\t\tthrow new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\r\n\t\t}\r\n\t\r\n\t\tsuper(none, joker);\r\n\r\n\t\tprops.set(this, {\r\n\t\t\tcolor,\r\n\t\t\trank: null\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a human-readable string representation of the card object\r\n\t *\r\n\t * eg. `\"<JokerCard color=red>\"`\r\n\t *\r\n\t * @return {string}\r\n\t */\r\n\ttoString() {\r\n\t\tconst { color } = props.get(this);\r\n\r\n\t\treturn `<JokerCard color=${color}>`;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string|void}\r\n\t * @description The unicode character that represents this particular card if one exists\r\n\t */\r\n\tget unicode() {\r\n\t\treturn super.unicode.get(props.get(this).color);\r\n\t}\r\n\r\n\t// /** @type {Rank} */\r\n\t// get rank() {\r\n\t// \treturn props.get(this).rank;\r\n\t// }\r\n\r\n\t// set rank(rank) {\r\n\t// \tif (rank instanceof Rank) {\r\n\t// \t\tprops.get(this).rank = rank;\r\n\t// \t}\r\n\t// }\r\n}\r\n\r\nexports.JokerCard = JokerCard;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cards/src/card/joker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cards/src/card/joker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}}],"sources":{"node_modules/cards/src/card/joker.js":"\r\nconst { Card } = require('./card');\r\nconst { none } = require ('../suits');\r\nconst { Rank } = require('../rank');\r\nconst { joker } = require('../ranks');\r\n\r\nconst props = new WeakMap();\r\n\r\nlet preferedColor = 'black';\r\n\r\nconst colors = new Set([ 'black', 'white', 'red' ]);\r\n\r\n/**\r\n * Sets the prefered joker color to use when creating joker cards. Effects the unicode character\r\n * for the card.\r\n *\r\n * @param color {'red'|'black'|'white'}\r\n * @return void\r\n */\r\nexports.preferedJokerColor = (color) => {\r\n\tif (! colors.has(color)) {\r\n\t\tthrow new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\r\n\t}\r\n\t\r\n\tpreferedColor = color;\r\n};\r\n\r\n/**\r\n * @class JokerCard\r\n * @extends Card\r\n * @param color {('red'|'black'|'white')?} - Defaults to whatever is set as the prefered color\r\n * @see preferedJokerColor\r\n * @description Special sub-class for representing Joker cards\r\n */\r\nclass JokerCard extends Card {\r\n\tconstructor(color = preferedColor) {\r\n\t\tif (! colors.has(color)) {\r\n\t\t\tthrow new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\r\n\t\t}\r\n\t\r\n\t\tsuper(none, joker);\r\n\r\n\t\tprops.set(this, {\r\n\t\t\tcolor,\r\n\t\t\trank: null\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a human-readable string representation of the card object\r\n\t *\r\n\t * eg. `\"<JokerCard color=red>\"`\r\n\t *\r\n\t * @return {string}\r\n\t */\r\n\ttoString() {\r\n\t\tconst { color } = props.get(this);\r\n\r\n\t\treturn `<JokerCard color=${color}>`;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {string|void}\r\n\t * @description The unicode character that represents this particular card if one exists\r\n\t */\r\n\tget unicode() {\r\n\t\treturn super.unicode.get(props.get(this).color);\r\n\t}\r\n\r\n\t// /** @type {Rank} */\r\n\t// get rank() {\r\n\t// \treturn props.get(this).rank;\r\n\t// }\r\n\r\n\t// set rank(rank) {\r\n\t// \tif (rank instanceof Rank) {\r\n\t// \t\tprops.get(this).rank = rank;\r\n\t// \t}\r\n\t// }\r\n}\r\n\r\nexports.JokerCard = JokerCard;\r\n"},"lineCount":83}},"error":null,"hash":"f86f76b7b474e3350a64ac6e48cc01cd","cacheData":{"env":{}}}